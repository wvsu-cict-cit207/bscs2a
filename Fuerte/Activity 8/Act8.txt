Activity 8

Exercise 9.6
9.6.1 Defining terms:
1. Class is a user-defined blueprint that defines the variable and methods that is
common to all java objects.
2. Object is a specimen of a class.
3. Instantiate is to create a new object.
4. Instance Variable is a non-static variable that is created with the use of the
keyword "new"
5. Instance Method is a non-static method that is declared inside a class.
6. Class Variables or static member variables are static variables that belongs to 
the class itself and only initiated once.
7. Constructor is one of the most important sub topic of a class, that is called
when a class is being executed.


9.6.2 Java Scavenger Hunt:
1. Look for a method that checks if a certain String ends with a certain suffix. For
example, if the given string is "Hello", the method should return true the suffix given
is "lo", and false if the given suffix is "alp".

Class: String
Method Declaration: public bolean endWith (String suffix)
Sample usage:
String str = "Maria Arlyn";
System.out.print(str.endsWith("lyn"));
//output is true

2. Look for the method that determines the character representation for a specific digit
in the specified radix. For example, if the input digit is 15, and the radix is 16, the
method would return the character F, since F is the hexadecimal representation for
the number 15 (base 10).

Class: Character
Method Declaration: public static char forDigit (int digit, int radix)
Sample Usage:
char valChar = Character.forDigit(15, 16);
System.out.print(valChar);
//output is false

3. Look for the method that terminates the currently running Java Virtual Machine

Class: System
Method Declaration: public static void exit (int status)
Sample Usage:
System.exit(0)
//exit the program silently

4. Look for the method that gets the floor of a double value. For example, if I input a
3.13, the method should return the value 3.

Class: Math
Method Declaration: public static double floor (double a)
Sample Usage:
double doubleFloor = Math.floor(3.13);
System.out.println(doubleFloor);
//output is 3.

5. Look for the method that determines if a certain character is a digit. For example, if I
input '3', it returns the value true

Class: Character
Method Declaration: public static boolean isDigit(char ch)
Sample Usage :
boolean valDigit = Character.isDigit('3')
System.out.println(valDigit);
//output is true
